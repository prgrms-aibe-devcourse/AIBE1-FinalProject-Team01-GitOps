apiVersion: v1
kind: ConfigMap
metadata:
  name: springboot-config
  namespace: amateurs
data:
  application-prod.yml: |
    spring:
      datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: ${DB_URL}
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD}
        hikari:
          maximum-pool-size: 20
          minimum-idle: 5
          idle-timeout: 600000
          max-lifetime: 1800000
          connection-timeout: 30000
      jpa:
        hibernate:
          ddl-auto: validate
          naming:
            physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        properties:
          hibernate:
            show_sql: false
            format_sql: false
            dialect: org.hibernate.dialect.MySQL8Dialect

      flyway:
        enabled: false
        locations: classpath:db/migration
        baseline-on-migrate: false
        validate-on-migrate: true

      data:
        mongodb:
          uri: ${MONGODB_URL}
        redis:
          host: ${REDIS_HOST:localhost}
          port: ${REDIS_PORT:6379}
          password: ${REDIS_PASSWORD:}

      security:
        oauth2:
          client:
            registration:
              github:
                client-id: ${GIT_CLIENT_ID}
                client-secret: ${GIT_CLIENT_SECRET}
                scope: read:user,user:email
                redirect-uri: ${SERVER_URL}login/oauth2/code/github
              kakao:
                client-id: ${KAKAO_CLIENT_ID}
                client-secret: ${KAKAO_CLIENT_SECRET}
                redirect-uri: ${SERVER_URL}login/oauth2/code/kakao
                authorization-grant-type: authorization_code
                client-authentication-method: client_secret_post
                client-name: Kakao
                scope: profile_nickname, profile_image, account_email
            provider:
              kakao:
                authorization-uri: https://kauth.kakao.com/oauth/authorize
                token-uri: https://kauth.kakao.com/oauth/token
                user-info-uri: https://kapi.kakao.com/v2/user/me
                user-name-attribute: id


      mail:
        host: smtp.gmail.com
        port: 587
        username: ${GMAIL_USERNAME}
        password: ${GMAIL_APP_PASSWORD}
        properties:
          mail:
            smtp:
              auth: true
              starttls:
                enable: true
              connectiontimeout: 5000
              timeout: 5000
              writetimeout: 5000


    springdoc:
      swagger-ui:
        path: /swagger-ui.html
        operationsSorter: method
        tagsSorter: alpha
        docExpansion: none
      enable-kotlin: false

      output:
        ansi:
          enabled: always

    langchain4j:
      google-ai-gemini:
        recommend:
          api-key: ${GEMINI_API_KEY}
          model-name: ${GEMINI_MODEL}
        report:
          api-key: ${GEMINI_REPORT_API_KEY}
          model-name: ${GEMINI_REPORT_MODEL}

    openai:
      api-key: ${OPENAI_API_KEY}
      embedding-model: ${OPENAI_MODEL}

    qdrant:
      host: ${QDRANT_URL}
      port: 6334
      api-key: ${QDRANT_API_KEY}
      collection-name: amateurs

    jwt:
      secret: ${JWT_SECRET}
      access-token-expiration-ms: 3600000
      refresh-token-expiration-ms: 1209600000

    cloud:
      aws:
        credentials:
          access-key: ${AWS_ACCESS_KEY}
          secret_key: ${AWS_SECRET_KEY}
        region:
          static: ${S3_REGION}
        s3:
          bucket: ${S3_BUCKET_NAME}
        cloudfront:
          domain: ${CLOUD_FRONT_DOMAIN_NAME}

    management:
      endpoints:
        web:
          exposure:
            include: health,info,prometheus,metrics
      endpoint:
        info:
          access: read_only
      otlp:
        metrics:
          export:
            enabled: false

    logging:
      level:
        root: info
        org.springframework: info

    oauth:
      success-redirect-url: ${OAUTH_SUCCESS_REDIRECT_URL}

    cookie:
      domain: ${COOKIE_DOMAIN}
      secure: true

    verification:
      service:
        url: ${VERIFICATION_SERVICE_URL}

    otel:
      service:
        name: amateurs-api-server
      traces:
        exporter: otlp
        sampler: parentbased_traceidratio
        sampler.arg: 1.0
      metrics:
        exporter: otlp
      logs:
        exporter: otlp
      instrumentation:
        micrometer:
          enabled: true

      exporter:
        otlp:
          endpoint: ${OTEL_COLLECTOR_URL}
          compression: gzip
          timeout: 10s
